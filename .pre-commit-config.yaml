## Pre-commit setup

repos:
  # its possible to put this at the bottom, but we want the pre-commit-hooks to check these files as well.
  - repo: local
    hooks:
      - id: ensure-default-configuration-is-exported
        name: Export default configuration
        language: python
        entry: poetry run python -m scripts.export_new_config_to_default_config
        files: '(app\.json|template\.env|modmail\/(config\.py|default_config(\.toml|\.yaml)))$'
        require_serial: true
        additional_dependencies:
          - atoml
          - attrs
          - click
          - coloredlogs
          - desert
          - https://github.com/Rapptz/discord.py/archive/45d498c1b76deaf3b394d17ccf56112fa691d160.zip
          - marshmallow
          - python-dotenv
          - pyyaml

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: check-case-conflict
      - id: check-added-large-files
      - id: check-json
      - id: check-toml
      - id: check-yaml
        exclude: 'mkdocs.yml' # Exclude all mkdocs.yml as they use tags i.e. `!!!`
      - id: pretty-format-json
        exclude: 'app.json'
        args: [--indent=4, --autofix]
      - id: end-of-file-fixer
      - id: no-commit-to-branch
        name: protect-branch
        alias: protect-branch
        args: [--branch=main, --branch=master]
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]

  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-check-blanket-noqa
      - id: python-check-blanket-type-ignore
      - id: python-use-type-annotations

  - repo: https://github.com/python-poetry/poetry
    rev: 1.8.0
    hooks:
    - id: poetry-check
      name: Check poetry.lock is up to date

  - repo: https://github.com/python-poetry/poetry-plugin-export
    rev: 1.8.0
    hooks:
    - id: poetry-export
      name: Generate requirements.txt
      args: ['-qqq', -f, requirements.txt, --without-hashes, --output, requirements.txt]
      files: '(pyproject.toml|poetry.lock|requirements.txt)$'
    - id: poetry-export
      name: Generate docs requirements.txt
      args: ['-qqq', --only, docs, -f, constraints.txt, --without-hashes, --output, docs/.requirements.txt]
      files: '(pyproject.toml|poetry.lock|docs\/.requirements.txt)$'

  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort

  - repo: https://github.com/asottile/blacken-docs
    rev: 1.18.0
    hooks:
      - id: blacken-docs
        additional_dependencies:
          - black

  - repo: https://github.com/psf/black
    rev: 24.8.0
    hooks:
      - id: black
        language_version: python3

  - repo: local
    hooks:
      - id: flake8
        name: flake8
        description: '`flake8` is a command-line utility for enforcing style consistency across Python projects.'
        entry: poetry run flake8
        language: python
        types: [python]
        require_serial: true
